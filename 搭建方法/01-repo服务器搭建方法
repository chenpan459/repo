搭建一个本地 repo 服务器通常用于 Android 源码的同步和分发。下面是一个在 Linux 系统（如 Ubuntu/CentOS）
上搭建 repo 服务的完整流程，基于 HTTP 协议，适用于局域网内其他开发者通过 repo 工具从该服务器同步代码。



一、环境准备
1. 安装依赖
sudo apt update
sudo apt install -y apache2 git python3

2. 安装 repo 工具（如果还未安装）
mkdir -p ~/bin
curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod a+x ~/bin/repo
export PATH=~/bin:$PATH

二、准备源码仓库
1. 初始化源仓库

假设你已经有了一套 Android 源码或者多个 git 项目，结构如：
/home/repo_src/
  ├── platform/
  ├── device/
  ├── kernel/
  └── .repo/manifest.git

2. 构建 manifest 仓库

如果你还没有 manifest 仓库，手动创建：
mkdir -p /home/repo_src/.repo/manifests
cd /home/repo_src/.repo/manifests
git init

创建一个 default.xml 文件描述所有项目（示例）：
<?xml version="1.0" encoding="UTF-8"?>
<manifest>
  <remote name="origin" fetch="." />
  <default revision="main" remote="origin" sync-j="4" />

  <project name="platform" path="platform" />
  <project name="device" path="device" />
  <project name="kernel" path="kernel" />
</manifest>
提交：
git add default.xml
git commit -m "add manifest"

三、配置 HTTP 服务器发布 Repo 仓库===》参考nginx的http服务器搭建
1. 将仓库拷贝到 Web 目录
sudo mkdir -p /var/www/html/repo
sudo cp -r /home/repo_src/.repo/repo/* /var/www/html/repo/
sudo cp -r /home/repo_src/* /var/www/html/repo/

确保 .repo/manifests.git 是 bare 格式：
cd /home/repo_src/.repo/
git clone --bare manifests manifests.git



四、客户端同步测试
1. 在客户端机器执行：
mkdir ~/myandroid
cd ~/myandroid
repo init -u http://<your-server-ip>/repo/.repo/manifests.git
或 repo init -u http://192.168.1.100/repo/.repo/manifests.git

repo sync

这样，你就成功搭建了一个本地 repo 服务器，并且可以通过 repo 工具从该服务器同步代码。

